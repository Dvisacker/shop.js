#{ 'yield' }
  // Checkout Modal
  .checkout-modal
    .modal-close
      h1 &#10005;

  // Checkout widget
  .checkout-container
    .checkout
      input#cart-collapsed(type='checkbox')
      ul.steps
        li
          .step-number
            .step-circle 1
          .step-description PAYMENT INFO
        li
          .step-number
            .step-circle 2
          .step-description SHIPPING INFO
        li
          .step-number
            .step-circle 3
          .step-description COMPLETED
      .continue-shopping
        h1 &#10005;

      checkout
        .parts
          .part
            .contact-information
              h1
                | Contact
              .fields
                user-name.input(placeholder='Name')
                user-email.input(placeholder='Email')
            .payment-information
              h1
                | Payment
                span.secured-text
                  | SSL Secure
                  span Checkout
                  img.lock-icon(src='img/lock-icon.svg')
              .fields
                card-name.input(placeholder='Name on Card')
                card-number.input(name='number', placeholder='Card Number')
                  img.card-logo.amex-logo(src='img/card-logos/amex.svg')
                  img.card-logo.discover-logo(src='img/card-logos/discover.svg')
                  img.card-logo.jcb-logo(src='img/card-logos/jcb.svg')
                  // img.card-logo.maestro-logo(src='img/card-logos/maestro.svg')
                  img.card-logo.mastercard-logo(src='img/card-logos/mastercard.svg')
                  img.card-logo.visa-logo(src='img/card-logos/visa.svg')
                card-expiry.input(name='expiry', placeholder='MM / YY')
                card-cvc.input(name='cvc', placeholder='CVC')
              p.cards-accepted
                // img.card-logo.maestro-logo(src='img/card-logos/maestro.svg')
                img.card-logo.amex-logo(src='img/card-logos/amex.svg')
                img.card-logo.visa-logo(src='img/card-logos/visa.svg')
                img.card-logo.mastercard-logo(src='img/card-logos/mastercard.svg')
                img.card-logo.discover-logo(src='img/card-logos/discover.svg')
                // img.card-logo.jcb-logo(src='img/card-logos/jcb.svg')
                a.stripe-link(href='//www.stripe.com', target='_blank')
                  img.stripe-logo(src='img/stripelogo.png')

          .part
            .shipping-information
              h1
                | Shipping
              .fields
                shippingaddress-name.input(placeholder='Recipient')
                shippingaddress-line1.input(placeholder='Address')
                shippingaddress-line2.input(placeholder='Suite')
              .fields
                shippingaddress-city.input(placeholder='City')
                shippingaddress-postalcode.input(placeholder='Postal Code')
              .fields
                shippingaddress-state.input(placeholder='State')
                shippingaddress-country.input(placeholder='Country')
            terms
              label(for='terms')
                | I have read and accept the&nbsp;
                a(href='{ termsUrl }', target='_blank') terms and conditions

          .part
            .thankyou
              p
                | Your order number is&nbsp;
                strong
                  | .
              p
                | You will get an email confirmation shortly.

              .share-field
                span.ref-text.ref-link Loading...
                span.copied Copied!

        .error(if='{ errorMessage }')
          | { errorMessage }

      cart
        h1
          label(for='cart-collapsed') Details
          label.expand-summary(for='cart-collapsed')
            img(src='img/info-black.svg')
          .invoice-value
            | { renderCurrency(data.get('order.currency'), data.get('order.total'))} { data.get('order.currency').toUpperCase() }
        lineitems(if='{ !isEmpty() }')
          .animated.slideInRight
            .product-image-container
              include _cart-images.pug
            .product-text-container
              span.product-description
                span.product-name { data.get('productName') }
                p { data.get('description') }
            span.product-quantity-container.locked(if="{ data.get('locked') }")
              | { data.get('quantity') }
            span.product-quantity-container(if="{ !data.get('locked') }")
              quantity-select-control
            .product-price-container.invoice-value
              .product-price
                | { renderCurrency(parentData.get('currency'), data.get().price * data.get().quantity) } { parentData.get('currency').toUpperCase() }
              .product-list-price.invoice-value(if='{ data.get().listPrice > data.get().price }')
                | { renderCurrency(parentData.get('currency'), data.get().listPrice * data.get().quantity) } { parentData.get('currency').toUpperCase() }
        .promo
          .promo-label
            | Coupon
          .promo-row(class='{ green: promoMessage.indexOf("Applied") >= 0, red: promoMessage && promoMessage.indexOf("Applied") < 0 }')
            promocode.input(placeholder='Coupon')
            button(class='{ loading: applying, notify: !applying && data.get("order.promoCode") && !promoMessage }', onclick='{ applyPromoCode }')
              span &#10003;
              span &#10005;
        .invoice-discount.invoice-line.animated.fadeInUp(if="{ data.get('order.discount') > 0 }")
          .invoice-label
            | Discount
          .invoice-value
            | { renderCurrency(data.get('order.currency'), data.get('order.discount'))} { data.get('order.currency').toUpperCase() }
        .invoice-line
          .invoice-label
            | Subtotal
          .invoice-value
            | { renderCurrency(data.get('order.currency'), data.get('order.subtotal'))} { data.get('order.currency').toUpperCase() }
        .invoice-line
          .invoice-label
            | Shipping
          .invoice-value
            | { data.get('order.shipping') == 0 ? 'FREE' : renderCurrency(data.get('order.currency'), data.get('order.shipping'))}&nbsp;{ data.get('order.shipping') == 0 ? '' : data.get('order.currency').toUpperCase() }
        .invoice-line
          .invoice-label
            | Tax ({ data.get('order.taxRate') * 100 }%)
          .invoice-value
            | { renderCurrency(data.get('order.currency'), data.get('order.tax'))} { data.get('order.currency').toUpperCase() }
        .invoice-line.invoice-total
          .invoice-label
            | Total
          .invoice-value
            | { renderCurrency(data.get('order.currency'), data.get('order.total'))} { data.get('order.currency').toUpperCase() }
        .invoice-line.estimated-delivery
          .invoice-label
            | Ships
          .invoice-value

